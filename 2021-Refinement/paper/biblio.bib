
@article{AMHEEMA:2023,
title = {{Compositional equivalences based on open pNets}},
journal = {Journal of Logical and Algebraic Methods in Programming},
volume = {131},
pages = {100842},
year = {2023},
issn = {2352-2208},
doi = {https://doi.org/10.1016/j.jlamp.2022.100842},
url = {https://www.sciencedirect.com/science/article/pii/S2352220822000955},
author = {Rabéa Ameur-Boulifa and Ludovic Henrio and Eric Madelaine},
keywords = {Bisimulation, Compositionality, Automata, Semantics},
abstract = {},
}
@article{EshuisF:2002,
  author    = {Rik Eshuis and
               Maarten M. Fokkinga},
  title     = {Comparing Refinements for Failure and Bisimulation Semantics},
  journal   = {Fundam. Informaticae},
  volume    = {52},
  number    = {4},
  pages     = {297--321},
  year      = {2002},
  url       = {http://content.iospress.com/articles/fundamenta-informaticae/fi52-4-02},
  timestamp = {Fri, 18 Sep 2020 01:00:00 +0200},
  biburl    = {https://dblp.org/rec/journals/fuin/EshuisF02.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}



@incollection{Brinksma:87,
  Author       = {Ed Brinksma and Giuseppe Scollo and Chris
                  Steenbergen},
  Booktitle    = {Protocol Specification, Testing and Verification VI},
  Editor       = {G. Bochmann and B. Sarikaya},
  Keywords     = {pcalc equivalence lotos binder},
  Pages	       = {349--360},
  Publisher    = {North Holland},
  Title	       = {{LOTOS} Specifications, Their Implementations and
                  Their Tests},
  Year	       = {1987}
}
@incollection{Gorrieri:2001,
  author    = {Roberto Gorrieri and
               Arend Rensink},
  editor    = {Jan A. Bergstra and
               Alban Ponse and
               Scott A. Smolka},
  title     = {Action Refinement},
  booktitle = {Handbook of Process Algebra},
  pages     = {1047--1147},
  publisher = {North-Holland / Elsevier},
  year      = {2001},
  url       = {},
  doi       = {10.1016/b978-044482830-9/50034-5},
  timestamp = {Fri, 28 Jun 2019 09:48:36 +0200},
  biburl    = {https://dblp.org/rec/books/el/01/GorrieriR01.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}



@article{GayH:2005,
  author    = {Simon J. Gay and
               Malcolm Hole},
  title     = {Subtyping for session types in the pi calculus},
  journal   = {Acta Informatica},
  volume    = {42},
  number    = {2-3},
  pages     = {191--225},
  year      = {2005},
  url       = {},
  doi       = {10.1007/s00236-005-0177-z},
  timestamp = {},
  biburl    = {https://dblp.org/rec/journals/acta/GayH05.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{BravettiZ:2021,
  author    = {Mario Bravetti and
               Gianluigi Zavattaro},
  title     = {Asynchronous session subtyping as communicating automata refinement},
  journal   = {Softw. Syst. Model.},
  volume    = {20},
  number    = {2},
  pages     = {311--333},
  year      = {2021},
  url       = {},
  doi       = {10.1007/s10270-020-00838-x},
  timestamp = {},
  biburl    = {https://dblp.org/rec/journals/sosym/BravettiZ21.bib},
  bibsource = {}
}





@inproceedings{deAlfaro:2021,
  author    = {Luca de Alfaro and
               Thomas A. Henzinger},
  editor    = {A Min Tjoa and
               Volker Gruhn},
  title     = {Interface automata},
  booktitle = {Proceedings of the 8th European Software Engineering Conference held
               jointly with 9th {ACM} {SIGSOFT} International Symposium on Foundations
               of Software Engineering 2001, Vienna, Austria, September 10-14, 2001},
  pages     = {109--120},
  publisher = {{ACM}},
  year      = {2001},
  url       = {},
  doi       = {10.1145/503209.503226},
  biburl    = {https://dblp.org/rec/conf/sigsoft/AlfaroH01.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{deAlfaro:2003,
  author    = {Luca de Alfaro},
  editor    = {Nachum Dershowitz},
  title     = {Game Models for Open Systems},
  booktitle = {{Verification: Theory and Practice, Essays Dedicated to Zohar Manna
               on the Occasion of His 64th Birthday}},
  series    = {Lecture Notes in Computer Science},
  volume    = {2772},
  pages     = {269--289},
  publisher = {Springer},
  year      = {2003},
  url       = {},
  doi       = {10.1007/978-3-540-39910-0\_12},
  timestamp = {Tue, 14 May 2019 10:00:52 +0200},
  biburl    = {https://dblp.org/rec/conf/birthday/Alfaro03.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}




@inproceedings{Alur:1998,
author="Alur, Rajeev
and Henzinger, Thomas A.
and Kupferman, Orna
and Vardi, Moshe Y.",
editor="Sangiorgi, Davide
and de Simone, Robert",
title="Alternating refinement relations",
booktitle="CONCUR'98 Concurrency Theory",
year="1998",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="163--178",
isbn="978-3-540-68455-8"
}

@book{Milner:1980,
  author    = {Robin Milner},
  title     = {A Calculus of Communicating Systems},
  series    = {Lecture Notes in Computer Science},
  volume    = {92},
  publisher = {Springer},
  year      = {1980},
  url       = {},
  doi       = {10.1007/3-540-10235-3},
  isbn      = {3-540-10235-3},
  timestamp = {Tue, 14 May 2019 10:00:35 +0200},
  biburl    = {https://dblp.org/rec/books/sp/Milner80.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}



@article{fhbisim,
  author    = {Rab{\'{e}}a Ameur{-}Boulifa and Ludovic Henrio and Eric Madelaine},
  title     = {Compositional equivalences based on Open pNets},
  journal   = {CoRR},
  volume    = {abs/2007.10770},
  year      = {2020},
  url       = {https://arxiv.org/abs/2007.10770},
  archivePrefix = {arXiv},
  eprint    = {2007.10770},
  timestamp = {Tue, 28 Jul 2020 14:46:12 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2007-10770.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
} 

@InProceedings{henrio:01299562,
  author="Henrio, Ludovic and Madelaine, Eric and Zhang, Min",
  editor="Albert, Elvira and Lanese, Ivan",
  title="A Theory for the Composition of Concurrent Processes",
  booktitle="Formal Techniques for Distributed Objects, Components, and Systems",
  year="2016",
  publisher="Springer International Publishing",
  address="Cham",
  pages="175--194",
  abstract="In this paper, we provide a theory for the operators composing concurrent processes. Open pNets (parameterised networks of synchronised automata) are new semantic objects that we propose for defining the semantics of composition operators. This paper defines the operational semantics of open pNets, using ``open transitions'' that include symbolic hypotheses on the behaviour of the pNets ``holes''. We discuss when this semantics can be finite and how to compute it symbolically, and we illustrate this construction on a simple operator. This paper also defines a bisimulation equivalence between open pNets, and shows its decidability together with a congruence theorem.",
  isbn="978-3-319-39570-8"
} % open pNets + FH-bisim

@article{qin:01823507,
  doi = {10.14279/TUJ.ECEASST.76.1103},
  url = {https://journal.ub.tu-berlin.de/eceasst/article/view/1103},
  author = {Madelaine,  Eric and Qin,  Xudong and Zhang,  Min and Bliudze,  Simon},
  language = {en},
  title = {Using SMT Engine to Generate Symbolic Automata},
  journal = {Electronic Communications of the EASST},
  pages = {Volume 76: Automated Verification of Critical Systems 2018 (AVoCS 2018)},
  publisher = {European Association of Software Science and Technology},
  year = {2019}
} % BIP in pNets

@article{ameurboulifa:01526055,
  title = {Behavioural semantics for asynchronous components},
  journal = {Journal of Logical and Algebraic Methods in Programming},
  volume = {89},
  pages = {1-40},
  year = {2017},
  issn = {2352-2208},
  doi = {https://doi.org/10.1016/j.jlamp.2017.02.003},
  url = {https://www.sciencedirect.com/science/article/pii/S2352220817300287},
  author = {R. Ameur-Boulifa and L. Henrio and O. Kulankhina and E. Madelaine and A. Savu},
  keywords = {Behavioural specification, Software components, Distributed systems, Futures},
  abstract = {Software components are a valuable programming abstraction that enables a compositional design of complex applications. In distributed systems, components can also be used to provide an abstraction of locations: each component is a unit of deployment that can be placed on a different machine. In this article, we consider this kind of distributed components that are additionally loosely coupled and communicate by asynchronous invocations. Components also provide a convenient abstraction for verifying the correct behaviour of systems: they provide structuring entities easing the correctness verification. This article provides a formal background for the generation of behavioural semantics for asynchronous components. It expresses the semantics of hierarchical distributed components communicating asynchronously by requests, futures, and replies; this semantics is provided using the pNet intermediate language. This article both demonstrates the expressiveness of the pNet model and formally specifies the complete process of the generation of a behavioural model for a distributed component system. The purpose of our behavioural semantics is to allow for verification both by finite instantiation and model-checking, and by techniques for infinite systems.}
} % GCM in pNets

@InProceedings{henrio:01252323,
  author="Henrio, Ludovic and Kulankhina, Oleksandra and Li, Siqi and Madelaine, Eric",
  editor="Stevens, Perdita and W{\k{a}}sowski, Andrzej",
  title="Integrated Environment for Verifying and Running Distributed Components",
  booktitle="Fundamental Approaches to Software Engineering",
  year="2016",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="66--83",
  abstract="This paper targets the generation of distributed applications with safety guarantees. The proposed approach starts from graphical specification formalisms allowing the architectural and behavioral description of component systems. From this point, the user can automatically verify application properties using model-checking techniques. Finally, the specified and verified component model can be translated into executable Java code. We implement our approach in a tool suite distributed as an Eclipse plugin. This paper also illustrates our approach by modeling and verifying Peterson's leader election algorithm.",
  isbn="978-3-662-49665-7"
} % open pNets used in VerCors as IR and for model checking

@INPROCEEDINGS{henrio:01055091,
  author={Henrio, Ludovic and Madelaine, Eric and Zhang, Min},
  booktitle={2015 23rd Euromicro International Conference on Parallel, Distributed, and Network-Based Processing},
  title={pNets: An Expressive Model for Parameterised Networks of Processes},
  year={2015},
  volume={},
  number={},
  pages={492-496},
  doi={10.1109/PDP.2015.70}
} % FH-bisim

@article{ISOLOTOS,
  author = {Bolognesi, Tommaso and Brinksma, Ed},
  title = {Introduction to the ISO Specification Language LOTOS},
  year = {1987},
  issue_date = {March, 1987},
  publisher = {Elsevier Science Publishers B. V.},
  address = {NLD},
  volume = {14},
  number = {1},
  issn = {0169-7552},
  url = {https://doi.org/10.1016/0169-7552(87)90085-7},
  doi = {10.1016/0169-7552(87)90085-7},
  journal = {Comput. Netw. ISDN Syst.},
  month = mar,
  pages = {25-59},
  numpages = {35}
}

@techreport{wang:03126313,
  TITLE = {{Symbolic Weak Equivalences: Extension, Algorithms, and Minimization - Extended version}},
  AUTHOR = {Wang, Biyang and Madelaine, Eric and Zhang, Min},
  URL = {https://hal.inria.fr/hal-03126313},
  TYPE = {Research Report},
  NUMBER = {RR-9389},
  PAGES = {71},
  INSTITUTION = {{Inria \& Universit{\'e} Cote d'Azur, CNRS, I3S, Sophia Antipolis, France ; East China Normal University (Shanghai)}},
  YEAR = {2021},
  MONTH = Jan,
  KEYWORDS = {Minimization ; Reduction ; SMT Solver ; Open Systems ; Weak Bisimulation ; Symbolic Bisimulation ; Concurrent Systems ; Syst{\`e}mes concurrents ; Bisimulation Symbolique ; Bisimulation Faible ; Syst{\`e}mes ouverts ; Solveur SMT ; R{\'e}duction ; Minimisation},
  PDF = {https://hal.inria.fr/hal-03126313/file/RR9389.pdf},
  HAL_ID = {hal-03126313},
  HAL_VERSION = {v1},
} % Motivating example

@InProceedings{10.1007/3-540-54430-5_78,
  author="Fernandez, Jean-Claude and Mounier, Laurent",
  editor="Baeten, Jos C. M. and Groote, Jan Frisco",
  title="A tool set for deciding behavioral equivalences",
  booktitle="CONCUR '91",
  year="1991",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="23--42",
  abstract="This paper deals with verification methods based on equivalence relations between labeled transition systems. More precisely, we are concerned by two practical needs: how to efficiently minimize and compare labeled transition systems with respect to bisimulation or simulation-based equivalence relations.",
  isbn="978-3-540-38357-4"
}

@article{basu:hal-00722395,
  TITLE = {{Rigorous Component-Based System Design Using the BIP Framework}},
  AUTHOR = {Basu, Ananda and Bensalem, Saddek and Bozga, Marius and Combaz, Jacques and Jaber, Mohamad and Nguyen, Thanh-Hung and Sifakis, Joseph},
  URL = {https://hal.archives-ouvertes.fr/hal-00722395},
  JOURNAL = {{IEEE Software}},
  PUBLISHER = {{Institute of Electrical and Electronics Engineers}},
  VOLUME = {28},
  NUMBER = {3},
  PAGES = {41-48},
  YEAR = {2011},
  MONTH = May,
  DOI = {10.1109/MS.2011.27},
  HAL_ID = {hal-00722395},
  HAL_VERSION = {v1},
}

@article{baude:inria-00323919,
  TITLE = {{GCM: A Grid Extension to Fractal for Autonomous Distributed Components}},
  AUTHOR = {Baude, Fran{\c c}oise and Caromel, Denis and Dalmasso, C{\'e}dric and Danelutto, Marco and Getov, Vladimir and Henrio, Ludovic and P{\'e}rez, Christian},
  URL = {https://hal.inria.fr/inria-00323919},
  JOURNAL = {{Annals of Telecommunications - annales des t{\'e}l{\'e}communications}},
  PUBLISHER = {{Springer}},
  YEAR = {2008},
  PDF = {https://hal.inria.fr/inria-00323919/file/GCM.pdf},
  HAL_ID = {inria-00323919},
  HAL_VERSION = {v1},
}

@inproceedings{10.1145/3372884.3373161,
  author = {Hou, Zechen and Madelaine, Eric},
  title = {Symbolic Bisimulation for Open and Parameterized Systems},
  year = {2020},
  isbn = {9781450370967},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {},
  doi = {10.1145/3372884.3373161},
  abstract = {Open Automata (OA) are symbolic and parameterized models for open concurrent systems. Here open means partially specified systems, that can be instantiated or assembled to build bigger systems. An important property for such systems is compositionality, meaning that logical properties, and equivalences, can be checked locally, and will be preserved by composition. In previous work, a notion of equivalence named FH-Bisimulation was defined for open-automata, and proved to be a congruence for their composition. But this equivalence was defined for a variant of open-automata that are intrinsically infinite, making it unsuitable for algorithmic treatment. We define a new form of equivalence named StrFH-Bisimulation, working on finite encodings of OAs. We prove that StrFH-Bisimulation is consistent and complete with respect to the FH-Bisimulation. Then we propose two algorithms to check StrFH-Bisimulation: the first one requires a (user-defined) relation between the states of two finite OAs, and checks whether it is a StrFH-Bisimulation. The second one takes two finite OAs as input, and builds a weakest StrFH-bisimulation such that their initial states are bisimilar. We prove that this algorithm terminates when the data domains are finite. Both algorithms use an SMT-solver as a basis to solve the proof obligations.},
  booktitle = {Proceedings of the 2020 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation},
  pages = {14-26},
  numpages = {13},
  keywords = {Strong Bisimulation, Open Systems, SMT Solver},
  location = {New Orleans, LA, USA},
  series = {PEPM 2020}
} % Algorithm and str-FH

@inproceedings{Bellegarde:2000,
  author="Bellegarde, Fran{\c{c}}oise and Julliand, Jacques and Kouchnarenko, Olga",
  editor="Maibaum, Tom",
  title="Ready-Simulation Is Not Ready to Express a Modular Refinement Relation",
  booktitle="Fundamental Approaches to Software Engineering",
  year="2000",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="266--283",
  abstract="The B method has been successfully used to specify many industrial applications by refinement. Previously, we proposed enriching the B event systems by formulating its dynamic properties in LTL. This enables us to combine model-checking with theorem-proving verification technologies. The model-checking of LTL formulae necessitates that the B event system semantics is a transition system. In this paper, we express the refinement relation by a relationship between transition systems. A result of our study shows that this relation is a special kind of simulation allowing us to exploit the partition of the reachable state space for a modular verification of LTL formulae. The results of the paper allow us to build a bridge between the above view of the refinement and the notions of observability characterized as simulation relations by Milner, van Glabbeek, Bloom and others. The refinement relation we define in the paper is a ready-simulation generalization which is similar to the refusal simulation of Ulidowsky. The way the relation is defined allows us to obtain a compositionality result w.r.t. parallel composition operation.",
  isbn="978-3-540-46428-0"
} % action refinement, tau-stuttering and parallel composition

@InProceedings{Kouchnarenko:2007,
  author="Kouchnarenko, Olga and Lanoix, Arnaud",
  editor="Virbitskaite, Irina and Voronkov, Andrei",
  title="How to Verify and Exploit a Refinement of Component-Based Systems",
  booktitle="Perspectives of Systems Informatics",
  year="2007",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="297--309",
  abstract="In order to deal with the verification of large systems, compositional approaches postpone in part the problem of combinatorial explosion during model exploration. The purpose of the work we present in this paper is to establish a compositional framework in which the verification may proceed through a refinement-based specification and a component-based verification approaches.",
  isbn="978-3-540-70881-0"
}

@article{Zhang2014,
  doi = {10.1155/2014/703098},
  url = {},
  year = {2014},
  publisher = {Hindawi Limited},
  volume = {2014},
  pages = {1--12},
  author = {Lianyi Zhang and Qingdi Meng and Kueiming Lo},
  title = {Compositional Abstraction Refinement for Component-Based Systems},
  journal = {Journal of Applied Mathematics}
}

@article{DIHEGO2020110598,
  title = {A refinement checking based strategy for component-based systems evolution},
  journal = {Journal of Systems and Software},
  volume = {167},
  pages = {110598},
  year = {2020},
  issn = {0164-1212},
  doi = {https://doi.org/10.1016/j.jss.2020.110598},
  url = {},
  author = {José Dihego and Augusto Sampaio and Marcel Oliveira},
  keywords = {Component extensibility, Correctness by construction, Behavioural specification, CSP, FDR4},
  abstract = {We propose inheritance and refinement relations for a CSP-based component model (BRIC), which supports a constructive design based on composition rules that preserve classical concurrency properties such as deadlock freedom. The proposed relations allow extension of functionality, whilst preserving behavioural properties. A notion of extensibility is defined on top of a behavioural relation called convergence, which distinguishes inputs from outputs and the context where they are communicated, allowing extensions to reuse existing events with different purposes. We mechanise the strategy for extensibility verification using the FDR4 tool, and illustrate our results with an autonomous healthcare robot case study.}
}

@article{cansell:inria-00099794,
  TITLE = {{Foundations of the B method}},
  AUTHOR = {Cansell, Dominique and M{\'e}ry, Dominique},
  URL = {https://hal.inria.fr/inria-00099794},
  NOTE = {Article dans revue scientifique avec comit{\'e} de lecture.},
  JOURNAL = {{Computing and Informatics}},
  HAL_LOCAL_REFERENCE = {A03-R-046 || cansell03a},
  PUBLISHER = {{Slovak University Press, Bratislava}},
  VOLUME = {22},
  PAGES = {31 p},
  YEAR = {2003},
  KEYWORDS = {{\'e}v{\'e}nements ; b ; events ; actions ; systems ; refinement ; proof ; validation ; formal method ; syst{\`e}mes ; raffinement ; preuve ; m{\'e}thode formelle},
  HAL_ID = {inria-00099794},
  HAL_VERSION = {v1},
}

@article{10.5555/640428.640430,
  author = {Eshuis, Rik and Fokkinga, Maarten M.},
  title = {Comparing Refinements for Failure and Bisimulation Semantics},
  year = {2002},
  issue_date = {April 2002},
  publisher = {IOS Press},
  address = {NLD},
  volume = {52},
  number = {4},
  issn = {0169-2968},
  abstract = {Refinement in bisimulation semantics is defined differently from refinement in failure semantics: in bisimulation semantics refinement is based on simulations between labelled transition systems, whereas in failure semantics refinement is based on inclusions between failure systems. There exist however pairs of refinements, for bisimulation and failure semantics respectively, that have almost the same properties. Furthermore, each refinement in bisimulation semantics implies its counterpart in failure semantics, and conversely each refinement in failure semantics implies its counterpart in bisimulation semantics defined on the canonical form of the compared processes.},
  journal = {Fundam. Inf.},
  month = apr,
  pages = {297-321},
  numpages = {25},
  keywords = {labelled transition systems, bisimulation semantics, refinement, decorated traces, failure semantics}
}


@book{sangiorgi:bisim-coind12,
  TITLE = {{Introduction to Bisimulation and Coinduction}},
  AUTHOR = {Sangiorgi, Davide},
  URL = {https://hal.inria.fr/hal-00907026},
  PUBLISHER = {{Cambridge University Press}},
  PAGES = {247},
  YEAR = {2012},
  HAL_ID = {hal-00907026},
  HAL_VERSION = {v1},
}

@book{Milner:1989,
author = {Milner, Robert},
title = {Communication and Concurrency},
year = {1989},
isbn = {0131150073},
publisher = {Prentice-Hall, Inc.},
address = {USA}
}
