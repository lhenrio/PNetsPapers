Dear Dr Henrio,

Thank you for submitting your manuscript to Journal of Logical and Algebraic Methods in Programming.  I have now received comments from two reviewers on your manuscript. I apologise for the time it took to get the two reviews, which was longer than I would have liked.

Based on the accompanying reports, I believe that your paper should become acceptable for publication pending suitable minor revision and modification of the article in light of the appended reviewer comments.

When resubmitting your manuscript, please carefully consider all issues mentioned in the reviewers' comments, outline every change made point by point, and provide suitable rebuttals for any comments that you decided not to address.

To submit your revised manuscript go to https://www.editorialmanager.com/jlamp/ and log in as an Author where you will see a menu item called 'Submission Needing Revision'.

Please resubmit your manuscript by Oct 19, 2022.

I look forward to receiving your revised manuscript.

Yours sincerely

Luca Aceto
Handling Editor
Journal of Logical and Algebraic Methods in Programming

Comments from the Editors and Reviewers:



Reviewer #1: Synopsis

The article under review presents under one roof work done by some of its authors (and others) over the years on the study of pNets and open pNets as well as on notions of bisimilarity over those models and their compositionality properties. In previous work, the authors proposed pNets as a hierarchical model for describing large concurrent systems and their specifications, studied notions of behavioural equivalence over pNets, provided some tool support for that model and applied it to case studies.

The aim of this article is to present and study the foundational theory of open pNets, namely pNets with holes at some of their leaves, which can be instantiated when refining the resulting system specification. The article develops the semantics of open pNets via translation to open automata, namely LTSs with parameters and holes. It also develops a behavioural theory for open automata (and thus open pNets) adapting de Simone's FH-bisimilarity to that notion of automaton and showing congruence properties for the resulting strong and weak notions of bisimilarity. In particular, the authors identify sufficient conditions guaranteeing the compositionality of strong and weak bisimulation equivalence. The technical contributions are illustrated throughout with a running example that describes a transport protocol.

Evaluation

I enjoyed reading the paper somewhat and appreciate the long-term effort by the authors and their co-workers on using variations on time-honoured models and techniques from process algebra and concurrency theory to good effect in modelling and verification of non-trivial systems. The authors have also done some valuable tool development accompanying their theoretical work. In particular, I am not aware of other uses of FH-bisimulation-like equivalences in practice.

The technical developments in the paper seem, by and large, sound to me. However, as the authors can see from the annotated scan of their paper that accompanies this short textual review, there is still some work that needs to be done in order to iron out some (relatively minor) remaining issues. Moreover, even though the presentation is reasonably clear, it should still be improved, polished and clarified in places. Last, but not least, it seems to me that several of the notions presented by the authors have connections with classic ones in the literature. I feel that the paper would improve substantially if the authors compared some of their contributions more carefully with the ones I point out in the annotated scan. For instance, a reader might ask: Why should I use open pNets instead of the mature mCRL2 tool set, which seems to support many of the features open pNets offer? (Note: I am not claiming that mCRL2 and its modelling language offer everything that open pNets
do. I am asking the authors to discuss their work vis-a-vis existing models and tools more thoroughly.) What are the relationships with context systems and context-dependent bisimilarity as defined by Larsen and colleagues? Could you compare your model with other hierarchical models of concurrent systems and the verification techniques they support?

-> [all] RW + cite mcrl2 decomposing

In summary, I think that the paper offers a good contribution, but that a revision addressing the comments raised in the annotated scan accompanying this review and the above general comments is needed before the paper can be accepted.


Reviewer #2: SUMMARY

The paper studies bisimulation equivalences for open systems, here represented by hierarchically structured systems with placeholders, called open pNets.
Open pNets are tree-like structures that combine fully specified parameterized labelled transition systems (pLTS) and some unknown
components represented as (sorted) holes. Here a pLTS is defined by a set of guarded transitions between states together
with variables assignment. Notably, open pNets can be (de)composed by filling their holes with other pNets.
Bisimulation equivalences for open pNets are obtained by introducing open automata as their semantic model:
open transitions in open automata carry some sort of guarded action labels that allow to require some properties about the
behaviour of placeholders and to fix some variables assignment.
First, a notion of strong bisimulation is defined, whose key feature is the possibility to simulate a single open transition
with a set of open transitions. Such bisimulation is called FH-bisimulation after the Formal Hypotheses it imposes
on the unknown components of the system. The key property is that the equivalence induced by FH-bisimulation
is a congruence w.r.t. the composition of open pNets (Th.5, composability).
Second, weak bisimulation is also defined by taking silent actions into account.
Note that the definition of weak transitions is here more involved than usual due to the rich structure of labels.
Under the hypothesis of non-observability of silent actions (Def.11), the congruence result is also extended
to weak FH-bisimilarity. Although this may look surprising, Def.11 is tailored to avoid the usual counterexamples
that arise in process algebra-like frameworks.
A running example of a simple message transport protocol specification vs implementation (adapted from the literature) is used
to illustrate the key definitions and the main findings.
Related work is extensively discussed in Section 6.

EVALUATION

The problem addressed in the paper (bisimulation for open systems) is interesting
and worth investigation. It falls well in the scope of the journal.
The framework of open pNets is semantically rich but technically heavy, so the notation is quite complicated to follow
in several places. Even the small-sized running example gives rise to complex figures and annotations.
This is due to the presence of actions, guards and assignments in a single label, together with the
need to coordinate the transitions of placeholders by means of synchronisation vectors.
Another limitation is that the structure of the modelled system looks quite static, e.g. holes are used
in a linear manner (cannot be created, duplicated or deleted).
As a coarse grain analogy, the definition of open pNets resembles the notion of "context" in a process
algebraic setting, that is a partial composition of operators whose semantics is defined by (SOS) inference
rules in some format that guarantees the linear usage of holes throughout the computation.
Certainly here the analogy is complicated by the presence of variables, (symbolic) guards and assignments,
and by the fact that ad hoc compositions can be considered (as opposed to having a fixed set of operators
as in the case of process algebras).

I wonder if an incremental presentation (e.g. briefly discussing the case of open pNets without variables first)
could improve the readability.
-> ??? regarder si introduire tot un operateur tres simple

The main results are correct as far as I was able to check but not very surprising: their statements are
complicated by the complexity of the chosen framework, but the properties agree with intuition.
The most ingenious aspects are the possibility to simulate an open transition using many transitions,
the composition of transitions and the definition of non-observability of silent actions.
Sometimes it seems that the terms bisimulation and bisimilarity are used interchangeably, while
this should not be the case (e.g., formally speaking we cannot say that bisimulation is an equivalence,
because a FH-bisimulation is not necessarily so, while FH-bisimilarity is).
-> Yes : check bismulation vs bisimilraity

OTHER COMMENTS

P5: Term algebra.. -> Term algebra.

P5: a set of action expressions \mathbb{E} called the action algebra -> a set of action expressions called the action algebra

P7, Def.1: give an example of a pLTS (even just a partially specified one).

P11,Fig.1: shouldn't the assignment that increments b_ec be associated with tau?

P14,L-2: variablesverify -> variables verify

P15,Def.7: give an example of a transition that is (bi)simulated by many

P15,Th.1: FH-bisimulation is an equivalence -> FH-bisimilarity is an equivalence
The statement must be changed accordingly: not any FH-bisimulation is an equivalence

P20,Fig.3: is SS_6 the same as SS_2? is SS_5 the same as SS_1? in SS_5, P-a -> p-a

P21,Def.10: justify the requirement that the predicate associated with the initial states is verifiable
(e.g. why not requiring it to be a tautology?)
-> is TRUE
-> [Eric et Rabea] To be discussed 


P24: "The condition J={j} is a bit restrictive ... " I disagree as you should be careful not to introduce sync of non observable actions
-> In fact, here we speak about the direction s in the definition. Having J={i,j} wuld ALLOW taus to occur synchronously but condition 1 still ensres that each process can do a tau separately. So yes we could introduced synchronized taus but as taus do not have to be synchronised it is not a problem.
-> [Ludo] add an explanation? at least make explicit the point that this only refers to direction 2!

P24: the \cup with the dot inside is a weird symbol for concatenation
-> [RABEA]

P26: Rule WT2 transforms each 3 ->  Rule WT2 transforms each 2 (?)
-> [LUDO] check

P26: a sequence 3 WOTs -> a sequence of 3 WOTs

P29: but based on open automata -> but based on weak open automata

P30, Th.6: Weak FH-Bisimulation -> Weak FH-Bisimilarity
the statement must be changed accordingly (check also Theorems 7-9)

P33: are you considering state 202 or 000 in the example?
-> [RABEA] check


P35: premisses -> premises (several times)

P35: an extension -> An extension

P37: missing reference []

P42, above (**): Pred_{p,u} -> Pred'_{p,u}
-> [LUDO] check


P52,Lemma 4: having n=-1 and m=-1 in the base case is a bit strange. Can you rephrase the Lemma to link the base case to n=0,m=0?
-> [LUDO] check

==== FROM SCAN =============

Can you speculate for the lack of applcations of ... in intro
-> Done biefly

Chercher des refs de LTS avec parametres 
-> [Rabea]

Kim larsen and xinxin Liu
-> Rabea

relation with condition on SOS rules 
-> Eric

page 5: many sorted setting 
-> Rabea et Eric

Disjoint union -> union over disjoint indices?
-> Ludo

def 1
vars(s) -> V
YES

page 8 comparison with larsen 
-> Rabea

Define vars(P)
-> Done , explain how

comparer avec de simone
-> [Rabea] x2!

p10: argument on proof 
> we added a sentence in this paragraph
-> [Eric] CHECK

p11,12 agrandir figs
-> [Rabea]

p13: It is important to understand 
-> ref a de simone par [rabea] et 
> explication [Ludo]
-> [Eric] CHECK

p 14 : anothre bib question
-> [Rabea]

p17 IMHO -> No?

complexity of the brute force 
-> Eric, ref?

p19 fig des regles 
-> Done rules are figs now

p22 references
-> [Rabea]

5.1 : YES

p35 : larsen and liu
-> [Rabea]

ref top de page 36
-> [Rabea]

format biblio
-> [Rabea]

* We moved the choice example earlier to explain the ideas and gathered arguemntns around observability and choice in a single example, page??

* we did not mention many-sorted logic as we are not sure it helps a lot here and it might confuse the reader because we already use sorts (for some kind of interface signatures made of actions) but we added a footnote about the different kind f terms in sec 2


\ERIC{P4, *say that this is like in Symbolic Bisimulation}
\begin{quote}Pas sur du tout, je bosse encore la-dessus...
\end{quote}

\ERIC{P4, *Any relations with the conditions on SOS rule formats guaranteeing compositionality of weak bisimilarity?}
\begin{quote} non je n'ai pas repondu ici... voir paragraph page precedente, est-ce suffisant "
\end{quote}

\ERIC{P14, *Is your definition a combination of De Simone FH-bisimulation and Hennessy and Lin's symbolic bisimulation?
\begin{quote}
Je n'ai pas redige ca... mais l'idee pourrait etre que en gros oui, et en y ajoutant le formalisme synch vecteurs de Arnold et Nivat, 
mais que notre approache est sensiblement differente, puisque plus syntaxique, pour permettre le developpement de representation finies, d'algorithmes, et d'outils...
\end{quote}


\ERIC{P17, *What is the comoplexity of this "brute force approach"?}
\begin{quote}
le paragraph existant etait difficilement comprehensible et loin de notre implementation dans l'outil. J'ai remplace par quelque chose de plus factuel:
"The definition of this predicate is not constructive. In our tool [39], we construct a logical formula encoding the matching and unification conditions involved, and let an SMT engine (in the current implementation Z3 [30]) decide its satisfiability"
\end{quote}

\ERIC{page 36, *It'd be a good idea to give links to software tools implementing your approach and to examples case-studies}
\begin{quote}
J'ai ajoute 7 ligns ici: "In this platform [...] different encodings of operators".
C'est un peu faible parceque 1) les outils de sont pas encore accessibles en ligne (ca aurait du etre l'achevement du stage de Slava...), et 2) on n'a pas de papier sur un vrai "use-case', a part le AVOCS sur le satellite, mais qui ne fait pas de bisimulation, juste des proprietes temporelles.
\end{quote}