
 ===   REVIEW 1   ===

The article defines a strong and weak bisimulation relations for pNets, Parametrised Networks of Automata.   These pNets have been developed by the authors in prior work.  They define open automata, an intermediary algebraic structure with holes, that is used to define strong bisimulation equivalence.   The (strong) bisimulation equivalence definition for pNets is then obtained indirectly, via a translation between pNets and open automata.    The definition of weak bisimulation for pNets follows a similar procedure.   These definitions are validated via properties compositionality.

Main Points
------------

+ The paper, is for the most part, well-written.  The authors make a conscious effort to tame the complexity of the presentation (see next point).  The running example is well designed and improves comprehension substantially.

- The definition of pNets is cumbersome. I understand that this work extends prior work where the model has been motivated already, but I have my reservations on the utility of the formalisms.    I found the running example (although useful) to be hard to understand.  It would perhaps be useful to provide anecdotal evidence showing that comparable formalisms cannot handle certain features of the example (which would justify the complexity of the model used).
=> add citation BIP + Weak RR
=> ERIC

=> ajouter encodage ou discussion sur encodage value passing CCS +FORTE +PDP expresiveness , reutiliser CCS au moment de la congruence weak bisim

- I was left unconvinced that using open automata as an intermediary structure to define the bisimualtion relations is the best approach to develop this material.  The authors should give more convincing argument that such definitions could not be adequately defined directly on pNets (an already complex framework).  It left me wondering:
1) How do you validate the translation of pNets to Open Automata?  Shouldn't there be some result that states that the translation is semantic preserving?  
DANS LA REPONSE AUX REVIEWERS
+ ajouter une phrase quelque part
on pourrait montrer que les 2 semantiques correspondent

DONE:
> In practice a proof of equivalence would make the article much longer with a lot of technical developments; we believe it would make the article more difficult to read.
> We added the following sentences when discussing the previouus semantics:

> "Comparing formally the existing direct operational semantics and the semantics derived from open automata in the current article would be an interesting partial proof of soundness for our semantics. The proof could only be partial as the formal semantics that exist only consider closed and fuully instantiated pNets. > Proving a bisimulation between the semantics presented in this article and the operational one shown in~\cite{AmeurBoulifa2017} is outside the scope of this article."




  
2) Why not work directly in terms of Open Automata (and forget all about pNets)?  A prima facie, they appear to be of a comparable complexity to pNets (if not simpler).  There are few people who would be interested in using a framework that relies on the second rule in Def 9 as a modelling language...  
The reason for the coexistence of the two formalisms is that one is hierarchical and adapted to modelling, the other is flat and more based on logic, and adapte to semantic reasoning.
We added one subsection in the inroduction that introduces the two formalisms and the reason why they exist.
=> all read again intro and check


- The definition of bisimulation is slightly non-standard (eg Def 7).  For instance, why does the transfer property require a "set" of matching transitions?  Normally, the existence of one suffices.  Moreover, given that a set is required, shouldn't there be an additional requirement that the matching set is necessarily non-empty? 

=> reformuler et expliquer au reviewer
> - We added in intro (inspired from Eric):
" Bisimulation over a symbolic and open model like open pNets or open automata is  different from the classical notion of bisimulation because it cannot rely on the equality over a finite set of action labels. Classical bisimulations require to exhibit, for each transition of one system, a transition of the other system that simulates it. Instead, bisimulation for open automata  rely on the simulation of each open transition of one automaton by a set of open transitions of the other one, that should cover all the 
cases where the original transition can be triggered.
"

> - We added explanations before the definition of FH-bisimulation, specifically on this point.


- In general, weak bisimulation is *not* a congruence for all types of interacting contexts.  For instance, in the case of CCS, the classsical counter example is that whereas 
tau.a.0  \bisim  a.0
we do *not* have
tau.a.0 + b.0 \bisim  a.0 + b.0 
Given the generality of the pNets framework I found the claim stated in Theorem 7 to be suspicious (and hard to ascertain).  The authors should perhaps provide more intuition why this is the case for their framework.

=> cf plus haut (LUDO)
TODO: add arguments on relatino with CCS

Minor Points
------------

pg 4 
X l 16: a_i -> "a" is also used as an action variable.
X(changed) l 22: denotes *as* (3 \mapsto a)

l -6: why not use an asymmetric symbol instead of \otimes? 
QUESTION: veut on vraiment changer de symbole?
ANSWER: \otimes is a form of composition: we chose something similar to \circ
=> RABEA?

pg 9
X l 6: why J' \subseteq J and not the entire set J?
ADDED: $J'\subseteq J$ is the set of holes involved in the transition
REMOVED l 18: open -> Open.  
REMOVED l 18: The sentence is a bit vague and obscure.
X l -6 (formula): make the quantifications of Pred and Post explicit (i.e. whether they are universally or existentially quantified)

pg 10:
X l 3..6: I cannot see how this follows as a consequence.
REPHRASED (not consequence but related)
X l 17: *a* relation
-> This relation
X l 19: take -> takes
X l 23: !J (what does ! denote)?
TYPO
X l 26: "Variables in V1 and V2 verify the predicate P_s,t" I am not sure what you mean by this.
REPHRASED as FOLLOWS:
the states are related when the value of the variables in $s$ and $t$  verify the predicate $\Pred_{s,t}$. Note that this implies that the free variables of  $\Pred_{s,t}$ belong to $V_1$ and $V_2$.

X l 27..28: why should V1 and V2 be disjoint?
Variables used in pred_s,t should refer to variables of the automata, but there must be no ambuiguity on which automaton it refers to. If the variable x should have the same value in both automata, we add x=x' to Pred. Otherwise hidden information would be confusing and the soundness of the theory would be difficult to ensure.
ADDED: Each variable used in $\Pred_{s,t}$ should refer to a state variable of $s$ or $t$ and there must be no ambiguity on the referenced variable.


pg 13: 
X second rule in def 9: why are indices split between I1 and I2?
ADDED: \footnote{It is of course possible to replace $I_1$ and $I_2$ by their formal definition but the rule would be more difficult to read.}

pg 14: 
TODO why is the term "Specification pNet" capitalised?
c est un peu le chantier sur les references aux noms des exmepls hje pense qu il faut une passe globale: capital ou pas, italique ou pas, en un mot ou 2 ...
=> utiliser des guillemets ou un nom specifique
=> RABEA

pg 16: 
CHECK l -2..-1:  Why does Theorem 5 imply the utility for studying interaction protocols?
C est pas ce qui etait ecrit, pour etre plus clair j ai ecrit ca:
This theorem is quite powerful. It somehow implies that the theory of open pNets is convenient to study properties of process composition. Open pNets can indeed be used to study process operators and process algebras, as shown in~\cite{henrio:Forte2016} where compositional properties are extremely useful. In the case of interaction protocols~\cite{BHHM:FACS11}, composition of bisimulation can justify abstractions used in some parts of the application.

pg 17:
X l -4: I found this condition hard to map to the intuition given on pg 18 line 1..2 
ADDED explcitly that:
statement (2) states that all the open transitions where a hole does  a $\tau$ must be of the shape given in statement (1)

pg 25:
TODO l 20: Provide a citation for the tools alluded to.
=> ERIC

---------------------------------------------------------------------------------------------------------------------------------------------

   ===   REVIEW   2   ===

SYNOPSIS

The paper proposes a generalisation of transition system specification (well known in the literature on structural operational semantics) called an open automaton, that generalises the traditional transition systems in two dimensions: hierarchical composition and conditional transition that may update the variables once the transition is executed (akin to extended finite state machines). The paper mainly uses open automata for semantic purposes: first, to define the semantics of parametrised networks (a graph-theoretic specification language); second, to define the (weak) bisimulation relations on the states of open automata (in turn between the states of a parametrised network). Lastly, congruence results are established both for strong and weak bisimulation relations w.r.t. the hierarchical composition operator.

EVALUATION

The paper is fairly well written and clearly falls in the scope of the journal LMCS; however, it comes short in reaching the quality transpired by an LMCS journal.
The introduction needs an improvement especially in terms of motivation; this seems to be the case with the formal definitions which in some cases need to be properly defined (see the detailed comments). For e.g., why were pNets introduced? 

Since pNets have been introduced for over 15 years, why are we studying (weak) bisimulation and establishing the usual basic facts about it now? Were there any case studies in your experience that suggest the need for such results? What are the reasons to pick bisimulation not simulation relations for the purpose of conformance between a specification and its implementation? It would be great to support these with some evidence.
=> argument pour bisim = on veut d'abord une relation d'equivalence pour l'algebre
=> donner un peu plus d arguments pou l utilite maintenant
=> intersection avec le point 1 du reviewer 1
=> PLUS TARD [visite a sophia]

Secondly, the choices made behind the mathematical notations and definitions are at a low level of abstraction; unfortunately, which makes the proofs in the appendix as unreadable. This is disappointing since most of the theorem/lemma statements are those that one would expect to be true. 
=> agree but this is what we have
=> obvious is subjective
=> mieux montrr comment c est different (cf 1 plus haut)

In addition, purely from the semantic point of view, the theoretical development is rather straightforward and most of the definitions/results already known in the literature on process algebras are engineered to the setting of open automata. 
=> cf comparaison with CCS


As a result, unfortunately, I do not endorse the publication of this manuscript. Nevertheless, I do believe that the paper may be more fitting in a journal which endorses both software engineering and formal methods.



DETAILED COMMENTS
X P1 Abstract L10 *... that includes parameters, and ...* parameters for what? Please elaborate more on this in the introduction.
In the intro I would use "variables"
TODO: add more on parameters in the intro
LUDO: I wrote one sentence in the first paragraph about this (j en avais besoin pour la suite)
=> ERIC read and improve 

P2 L24 *... provides a cleaner version...* I am afraid such a sentence does not add any value if there is no explanation discussing it in detail somewhere later in the paper.
TODO: explain why it is simpler in conclusion ??
=> extended and allows to make proofs
=> add one sentence in the section or in conclusion
=> LUDO
This sentence has been slightly refined to be less cryptic but it is a bit early to compare the formalisms in details. As suggested, we refined the paragraph at the end of sec 2.2 and explained positioned more precisely the definition of pnets and their semantics compared to previous works
@all: read again last paragraph of 2.2 is it sufficient?

P3 L-11 What is an action algebra? I believe it is an undefined term in the paper. 
TODO
=> ERIC

X P4 L-6 *We distinguish two kinds....* please rewrite this sentence


X P4 L1 We additionally *impose*
X P4 L6 *negociation* typo

MINOR? P4 L20 A minor point: Technically, $a^{i\in 3}$ is not allowed by your syntax since indices need to also appear as a subscript.

X P4 L22 I am afraid we do not use abusive vocabulary in mathematics, rather we only abuse notation. Please rewrite.
X P4 L26 *\uplus is the disjoint union of sets* Please rewrite this sentence; it is considered to be a bad practice to start the sentence with a symbol (cf. Donald Knuth on mathematical writing available from https://jmlr.csail.mit.edu/reviewing-papers/knuth_mathematical_writing.pdf).


P4 L-9 *We denote y <- e a substitution* What do you mean by this? Do you mean that y<-e is a partial function from the set of variables to terms that is only defined for the variable y as the term e?
P4 L-9 *The application of a substitution...* Its strange to denote an application of a substitution without any denotation for its argument.
P4 L-7 The notion of substitutions on indexed sets is more subtle; they may not be a function unlike a substitution in the traditional setting. For e.g., x_1 <-e, x_2 <-e’ with x_1 = x_2.
P4 L-6 *\otimes is the composition operator...* Is this operation totally defined? This even makes it necessary that substitutions are defined properly.
==> revoir les trucs sur les substitutions
=> LUDO

X P4 L-2 Missing comma
-> when instead

NOT DONE P5 Def 1 Is vars(s) defined earlier?
yes: vars(t) on any term (we consider states are terms) 

NOT DONE P5 Def 2 How is the symbol $l$ quantified in the clause pertaining to synchronisation vectors.
>> l\in I_k\uplus J_k in all 3 occurrences of $l$, we did not see what to add
=> Check?
SOLVED  P6 Def 3 In the first clause defining Sort, the notation *?x <- x* is not defined since, technically, a substitution substitutes a variable not a term like ?x.
slightly changed to be more formal: we just remember the actions and arith and use it to define the |right sort| below.
=> ERIC et RABEA : CHECK new sort


X P6 Def 3 In the third item, *indexes* should be *indices*

X P6 L-15 It would be nice to have a sentence motivating synchronisation vectors that they are essentially transitions; here the example from 2.3 was helpful.
We tried to explain this as the reviewer suggests, using a "transition" terminology:
Consider for example a pNet that assembles several pLTSs, the synchronisation vectors express transitions of the composing pNet: each vector expresses not only the actions emitted by the pNet but also what transitions of the composed pLTSs must occur to trigger this global transition.
=> Eric et Rabea: check

X P6 Def 4 When is a pNet of the right sort?
this has been formalised

X P9 Def 5 Here, is Sort_j again a set of parameterised actions?
Solved with the adaptation to the new simpler form of sorts

X P9 Def 5 L6 *all variables in the different terms \beta_j and \alpha* What do you mean by this phrase?
Formalised

X P9 Def 5 L7 By *assignments* do you mean indexed substitutions?
Yes, added the second version

P9 Def 6 L-4 Please explain *simple logic* and *paper rules* in more detail? P9 Def 6 L-2 open with capital O
CHECK:
It is important to understand the difference between the red dotted rule and a normal 
inference rule. They correspond to two different logical levels.
On one side, classical (black) inference rules  use  an expressive logic (like any other computer science article).
 On the other side, open transition rules (with dotted lines) are logical implications, but using a  logic with a specific syntax and that can be mechanized (this logic includes the boolean expressions $\AlgB$, boolean operators, and term equality).
=> eric et rabea read and improve
OU Discuter a sophia

P9 Def 6 L8 *We take in this article ...* Doesn’t add anything and it isn’t clear what the writer is trying to convey here? I guess that the intent is to stay that the set of transition is closed under the implication given below in Page 9.
REPHRASED

Also, it would be good to add some accompanying texts that explain this implication. My understanding is that this implication says that the set of open transitions is closed under the
refinement of predicates, which is a strong assumption from the modelling point of view. This is because modeller is forced to add new behaviour which (s)he is not interested to capture.
Lastly, I was anticipating a more formal way to derive transitions of an open automaton just like how transitions are derived by a witnessing proof in the context of transition system specifications. For latter, a reference is as follows:
J.F. Groote. Transition system specifications with negative premises. TCS 118, 1993 https://www.sciencedirect.com/science/article/pii/0304397593901116
Also, I believe that the induced transitions in T are all meaningful (in the sense of Glabbeek, see below) because there are no negative transitions in the premise of an open transition.
R.J. van Glabbeek. The meaning of negative premises in transition system specifications II. JLAP, 2004 https://www.sciencedirect.com/science/article/pii/S1567832604000281
Such a discussion with a possible related work is missing and should be provided at least in a separate remark.
=> ERIC et RABEA

X P10 Def 7 L-6 Typo *!J* should be just *J*

P10 Def 7 It was frustrating to not find out what is the type of an FH-bisimulation R, which I think is necessary if you want to compute such an R. 
TYPAGE de R c est une fonction qui associe a toute paire de states le predicat (le predicat est une fonction de V1xV2 -> bool) on le note comme triplet

Firstly, it should be mentioned that Pred_{s,t} is some predicate over V_1 \cup V_2. 
>> DONE

Second, please give the formal type of conditional relation R before defining the transfer property of an FH-bisimulation. Here, by a conditional relation R on the sets X and Y I mean a function of type X \times Y ---> L, where L is some lattice modelling the values that the relation can take. For instance, traditional relation on X and Y can be seen as a function X \times Y ---> 2, where 2={0,1} is the obvious Boolean algebra of two point set; so x R y \iff R(x,y)=1. Similarly, in your case, the lattice L should be the Boolean algebra P(Pred), where P(X) is the powerset of X, for any set X.

>> We added the formal definition of R  before the definition of FH-bisimulation. Basically, in our case L are the boolean expressions denoted B and corresponding to the set of all possible predicates. I believe the powerset is bigger and we do not allow a pair of states to be matched to several Predicates.



This raises the issue whether FH-bisimulation is an instance of conditional bisimulation (when the lattice L is P(Pred) ) as defined in the following paper:
H.Beohar, B. König, S. Küpper, & A. Silva. Conditional transition systems with upgrades. https://www.sciencedirect.com/science/article/abs/pii/S0167642319301169
DISUCSS???
=> RABEA et ERIC


X P11 L1 What is X in the open transition OT_x^{x\in X}?
In the context of this article, we consider that an indexed set OT_x^{x\in X} defines both an indexation set X and a set of elements OT_x for x\in X. We additionally clarified this in the notation section. Additionally to the previuous text that stated:
"$t_i^{i\in I}$ defines first $I$ the set over which the family is indexed, and then $a_i$ the elements of the family"
we added:
"Note that, sentences of the form ``there exists $t_i^{i\in I}$'' means there exists $I$ and a function that maps each element of $I$ to a term $t_i$."

P11 L2 Typo: jx as the subscript of \beta. You could use \beta_{j_x}?
it should be j,x then but do we want to do this everywhere? (it will be very heavy)
DECISION: on change rien et on met une footnote qui dit qu on omet la virgule

X P11 L-8 What do you mean by a finite predicate?
this was removed: we meant finiteness of the set R, but it is finite anyway.

X P12 L6 Could you expand on what is bisimulation theory for open pNets?
CHANGED 

X P13 Def 9 Please exemplify *I_1 for the others*?
exepmlify in a definition???
added explanations

NOT DONE  P13 Def 9 In the first line of the premise of Tr2, shouldn’t the occurrences of \alpha’ in SV_k just be \alpha?
No, we have the constraint \alpha=\alpha', but as actions are parameterised it might be instantiated, for example in the simple protocol we would have \alpha=in(m) and \alpha'= in(MSG) eith MSG a real message object, obtained by the r-send transition of the receiver automaton.
QUESTION : est ce qu on met l exemple dans le papier


NOT DONE P13 Def 9 Tr2 by *fresh(\alpha’_m,\alpha’,\beta_j,\alpha)* should be understand that the variables occurring in \alpha’_m,\alpha’, \beta_j (for all j), and \alpha are fresh?
Yes: it is written just above the definition

TODO P16 L-4 You claim Theorem 5 is quite useful in practice; however, I wonder here about FH- simulation. First, whether a similar result holds for simulation? Second, FH-simulaton would be more relevant if we disallow that the set of transitions in an open automaton are closed under the refinement of predicates (Def. 6).
=> RABEA reflechir a une reponse + mettre une phrase sur rafinement


ADDED EXPLANATION P17 Def 11 Isn’t (1) a special case of (2)?
No because T=\emptyset verifies (2) but not (1)
We added an explanatory sentence below

X P18 Def 12 Other than the symbol used for weak transition, is there any semantic difference in Def 12 between a weak open transition and an open transition defined earlier?
Yes: "\gamma ranges over sequences of action terms while "\beta ranges over action terms"
This is now recalled before the definition.
This has a huge semantic impact as a single weak transition is the composition of several transitions of the holes.


X P22 L-1 Shouldn’t Pred be Pred_{s,t}? Again, please give the type of this conditional relation 
DONE

X P28 L2 *principle* --> *relations*
DONE