
 ===   REVIEW 1   ===

The article defines a strong and weak bisimulation relations for pNets, Parametrised Networks of Automata.   These pNets have been developed by the authors in prior work.  They define open automata, an intermediary algebraic structure with holes, that is used to define strong bisimulation equivalence.   The (strong) bisimulation equivalence definition for pNets is then obtained indirectly, via a translation between pNets and open automata.    The definition of weak bisimulation for pNets follows a similar procedure.   These definitions are validated via properties compositionality.

Main Points
------------

+ The paper, is for the most part, well-written.  The authors make a conscious effort to tame the complexity of the presentation (see next point).  The running example is well designed and improves comprehension substantially.

- The definition of pNets is cumbersome. I understand that this work extends prior work where the model has been motivated already, but I have my reservations on the utility of the formalisms.    I found the running example (although useful) to be hard to understand.  It would perhaps be useful to provide anecdotal evidence showing that comparable formalisms cannot handle certain features of the example (which would justify the complexity of the model used).

- I was left unconvinced that using open automata as an intermediary structure to define the bisimualtion relations is the best approach to develop this material.  The authors should give more convincing argument that such definitions could not be adequately defined directly on pNets (an already complex framework).  It left me wondering:
1) How do you validate the translation of pNets to Open Automata?  Shouldn't there be some result that states that the translation is semantic preserving?    
2) Why not work directly in terms of Open Automata (and forget all about pNets)?  A prima facie, they appear to be of a comparable complexity to pNets (if not simpler).  There are few people who would be interested in using a framework that relies on the second rule in Def 9 as a modelling language...  

- The definition of bisimulation is slightly non-standard (eg Def 7).  For instance, why does the transfer property require a "set" of matching transitions?  Normally, the existence of one suffices.  Moreover, given that a set is required, shouldn't there be an additional requirement that the matching set is necessarily non-empty? 

- In general, weak bisimulation is *not* a congruence for all types of interacting contexts.  For instance, in the case of CCS, the classsical counter example is that whereas 
tau.a.0  \bisim  a.0
we do *not* have
tau.a.0 + b.0 \bisim  a.0 + b.0 
Given the generality of the pNets framework I found the claim stated in Theorem 7 to be suspicious (and hard to ascertain).  The authors should perhaps provide more intuition why this is the case for their framework.


Minor Points
------------

pg 4 
X l 16: a_i -> "a" is also used as an action variable.
X(changed) l 22: denotes *as* (3 \mapsto a)
l -6: why not use an asymmetric symbol instead of \otimes? 
veut on vraiment changer de symbole?
ANSWER: \otimes is a form of composition: we chose something similar to \circ


pg 9
X l 6: why J' \subseteq J and not the entire set J?
ADDED: $J'\subseteq J$ is the set of holes involved in the transition
REMOVED l 18: open -> Open.  
REMOVED l 18: The sentence is a bit vague and obscure.
l -6 (formula): make the quantifications of Pred and Post explicit (i.e. whether they are universally or existentially quantified)

pg 10:
l 3..6: I cannot see how this follows as a consequence.
l 17: *a* relation
l 19: take -> takes
l 23: !J (what does ! denote)?
l 26: "Variables in V1 and V2 verify the predicate P_s,t" I am not sure what you mean by this.
l 27..28: why should V1 and V2 be disjoint?


pg 13: 
second rule in def 9: why are indices split between I1 and I2?

pg 14: 
why is the term "Specification pNet" capitalised?

pg 16: 
l -2..-1:  Why does Theorem 5 imply the utility for studying interaction protocols?

pg 17:
l -4: I found this condition hard to map to the intuition given on pg 18 line 1..2 

pg 25:
l 20: Provide a citation for the tools alluded to.


---------------------------------------------------------------------------------------------------------------------------------------------

   ===   REVIEW   2   ===

SYNOPSIS

The paper proposes a generalisation of transition system specification (well known in the literature on structural operational semantics) called an open automaton, that generalises the traditional transition systems in two dimensions: hierarchical composition and conditional transition that may update the variables once the transition is executed (akin to extended finite state machines). The paper mainly uses open automata for semantic purposes: first, to define the semantics of parametrised networks (a graph-theoretic specification language); second, to define the (weak) bisimulation relations on the states of open automata (in turn between the states of a parametrised network). Lastly, congruence results are established both for strong and weak bisimulation relations w.r.t. the hierarchical composition operator.

EVALUATION

The paper is fairly well written and clearly falls in the scope of the journal LMCS; however, it comes short in reaching the quality transpired by an LMCS journal.
The introduction needs an improvement especially in terms of motivation; this seems to be the case with the formal definitions which in some cases need to be properly defined (see the detailed comments). For e.g., why were pNets introduced? Since pNets have been introduced for over 15 years, why are we studying (weak) bisimulation and establishing the usual basic facts about it now? Were there any case studies in your experience that suggest the need for such results? What are the reasons to pick bisimulation not simulation relations for the purpose of conformance between a specification and its implementation? It would be great to support these with some evidence.
Secondly, the choices made behind the mathematical notations and definitions are at a low level of abstraction; unfortunately, which makes the proofs in the appendix as unreadable. This is disappointing since most of the theorem/lemma statements are those that one would expect to be true. In addition, purely from the semantic point of view, the theoretical development is rather straightforward and most of the definitions/results already known in the literature on process algebras are engineered to the setting of open automata. As a result, unfortunately, I do not endorse the publication of this manuscript. Nevertheless, I do believe that the paper may be more fitting in a journal which endorses both software engineering and formal methods.

DETAILED COMMENTS
P1 Abstract L10 *... that includes parameters, and ...* parameters for what? Please elaborate more on this in the introduction.
P2 L24 *... provides a cleaner version...* I am afraid such a sentence does not add any value if there is no explanation discussing it in detail somewhere later in the paper.
P3 L-11 What is an action algebra? I believe it is an undefined term in the paper. P4 L-6 *We distinguish two kinds....* please rewrite this sentence
P4 L1 We additionally *impose*
P4 L6 *negociation* typo
P4 L20 A minor point: Technically, $a^{i\in 3}$ is not allowed by your syntax since indices need to also appear as a subscript.
P4 L22 I am afraid we do not use abusive vocabulary in mathematics, rather we only abuse notation. Please rewrite.
P4 L26 *\uplus is the disjoint union of sets* Please rewrite this sentence; it is considered to be a bad practice to start the sentence with a symbol (cf. Donald Knuth on mathematical writing available from https://jmlr.csail.mit.edu/reviewing-papers/knuth_mathematical_writing.pdf).
P4 L-9 *We denote y <- e a substitution* What do you mean by this? Do you mean that y<-e is a partial function from the set of variables to terms that is only defined for the variable y as the term e?
P4 L-9 *The application of a substitution...* Its strange to denote an application of a substitution without any denotation for its argument.
P4 L-7 The notion of substitutions on indexed sets is more subtle; they may not be a function unlike a substitution in the traditional setting. For e.g., x_1 <-e, x_2 <-e’ with x_1 = x_2.
P4 L-6 *\otimes is the composition operator...* Is this operation totally defined? This even makes it necessary that substitutions are defined properly.
P4 L-2 Missing comma
P5 Def 1 Is vars(s) defined earlier?
P5 Def 2 How is the symbol $l$ quantified in the clause pertaining to synchronisation vectors.
P6 Def 3 In the first clause defining Sort, the notation *?x <- x* is not defined since, technically, a substitution substitutes a variable not a term like ?x.
P6 Def 3 In the third item, *indexes* should be *indices*
P6 L-15 It would be nice to have a sentence motivating synchronisation vectors that they are essentially transitions; here the example from 2.3 was helpful.
P6 Def 4 When is a pNet of the right sort?
P9 Def 5 Here, is Sort_j again a set of parameterised actions?
P9 Def 5 L6 *all variables in the different terms \beta_j and \alpha* What do you mean by this phrase?
P9 Def 5 L7 By *assignments* do you mean indexed substitutions?
P9 Def 6 L-4 Please explain *simple logic* and *paper rules* in more detail? P9 Def 6 L-2 open with capital O
P9 Def 6 L8 *We take in this article ...* Doesn’t add anything and it isn’t clear what the writer is trying to convey here? I guess that the intent is to stay that the set of transition is closed under the implication given below in Page 9.
Also, it would be good to add some accompanying texts that explain this implication. My understanding is that this implication says that the set of open transitions is closed under the
refinement of predicates, which is a strong assumption from the modelling point of view. This is because modeller is forced to add new behaviour which (s)he is not interested to capture.
Lastly, I was anticipating a more formal way to derive transitions of an open automaton just like how transitions are derived by a witnessing proof in the context of transition system specifications. For latter, a reference is as follows:
J.F. Groote. Transition system specifications with negative premises. TCS 118, 1993 https://www.sciencedirect.com/science/article/pii/0304397593901116
Also, I believe that the induced transitions in T are all meaningful (in the sense of Glabbeek, see below) because there are no negative transitions in the premise of an open transition.
R.J. van Glabbeek. The meaning of negative premises in transition system specifications II. JLAP, 2004 https://www.sciencedirect.com/science/article/pii/S1567832604000281
Such a discussion with a possible related work is missing and should be provided at least in a separate remark.
P10 Def 7 L-6 Typo *!J* should be just *J*
P10 Def 7 It was frustrating to not find out what is the type of an FH-bisimulation R, which I think is necessary if you want to compute such an R. Firstly, it should be mentioned that Pred_{s,t} is some predicate over V_1 \cup V_2. Second, please give the formal type of conditional relation R before defining the transfer property of an FH-bisimulation. Here, by a conditional relation R on the sets X and Y I mean a function of type X \times Y ---> L, where L is some lattice modelling the values that the relation can take. For instance, traditional relation on X and Y can be seen as a function X \times Y ---> 2, where 2={0,1} is the obvious Boolean algebra of two point set; so x R y \iff R(x,y)=1. Similarly, in your case, the lattice L should be the Boolean algebra P(Pred), where P(X) is the powerset of X, for any set X.
This raises the issue whether FH-bisimulation is an instance of conditional bisimulation (when the lattice L is P(Pred) ) as defined in the following paper:
H.Beohar, B. König, S. Küpper, & A. Silva. Conditional transition systems with upgrades. https://www.sciencedirect.com/science/article/abs/pii/S0167642319301169
P11 L1 What is X in the open transition OT_x^{x\in X}?
P11 L2 Typo: jx as the subscript of \beta. You could use \beta_{j_x}?
P11 L-8 What do you mean by a finite predicate?
P12 L6 Could you expand on what is bisimulation theory for open pNets? P13 Def 9 Please exemplify *I_1 for the others*?
P13 Def 9 In the first line of the premise of Tr2, shouldn’t the occurrences of \alpha’ in SV_k just be \alpha?
P13 Def 9 Tr2 by *fresh(\alpha’_m,\alpha’,\beta_j,\alpha)* should be understand that the variables occurring in \alpha’_m,\alpha’, \beta_j (for all j), and \alpha are fresh?
P16 L-4 You claim Theorem 5 is quite useful in practice; however, I wonder here about FH- simulation. First, whether a similar result holds for simulation? Second, FH-simulaton would be more relevant if we disallow that the set of transitions in an open automaton are closed under the refinement of predicates (Def. 6).
P17 Def 11 Isn’t (1) a special case of (2)?
P18 Def 12 Other than the symbol used for weak transition, is there any semantic difference in Def 12 between a weak open transition and an open transition defined earlier?
P22 L-1 Shouldn’t Pred be Pred_{s,t}? Again, please give the type of this conditional relation P28 L2 *principle* --> *relations*